name: Makefile CI

on:
  workflow_dispatch:
  push:
  pull_request:

jobs:
  test_lab_1:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        MPI_NP: [1, 2, 4, 8, 16]
        version: [1, 2]
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup MPI
      uses: mpi4py/setup-mpi@v1
      with:
        mpi: ${{ matrix.mpi }}
    - name: Build
      working-directory: lab1/src
      run: make build version=${{ matrix.version }}
    - name: Run
      working-directory: lab1/src
      run: make run version=${{ matrix.version }} np=${{ matrix.MPI_NP }}
    - name: Clean
      working-directory: lab1/src
      run: make clean version=${{ matrix.version }}
      
  test_lab_2:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        OMP_NUM_THREADS: [1, 2, 4, 8, 16]
        version: [1, 2]
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Build
      working-directory: lab1/src
      run: make build version=${{ matrix.version }}
    - name: Run
      working-directory: lab1/src
      run: make run version=${{ matrix.version }} np=${{ matrix.OPM_NUM_THREADS }}
    - name: Clean
      working-directory: lab1/src
      run: make clean version=${{ matrix.version }}
      
  test_schedule_lab_2:
    needs: test_lab_2
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        schedule_type: ["static", "dynamic", "guided"]
        schedule_chunk: [0, 100, 200, 400, 800]
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Build
      working-directory: lab2/src
      run: make build version=schedule
    - name: Run
      working-directory: lab2/src
      run: make run version=schedule np=16 schedule=${{ matrix.schedule_type }},${{ matrix.schedule_chunk }}
    - name: Clean
      working-directory: lab2/src
      run: make clean version=schedule
  
  test_lab_3:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        MPI_NP: [1, 2, 4, 8, 16]
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup MPI
      uses: mpi4py/setup-mpi@v1
      with:
        mpi: ${{ matrix.mpi }}
    - name: Build
      working-directory: lab3/src
      run: make build
    - name: Run
      working-directory: lab3/src
      run: make run np=${{ matrix.MPI_NP }}
    - name: Clean
      working-directory: lab3/src
      run: make clean
      
  test_lab_4:    
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        MPI_NP: [1, 2, 4, 8, 16]
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup MPI
      uses: mpi4py/setup-mpi@v1
      with:
        mpi: ${{ matrix.mpi }}
    - name: Build
      working-directory: lab4/src
      run: make build
    - name: Run
      working-directory: lab4/src
      run: make run np=${{ matrix.MPI_NP }}
    - name: Clean
      working-directory: lab4/src
      run: make clean
